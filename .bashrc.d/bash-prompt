# -*- mode: sh; -*-
# Set prompt

trap '__prompt_start' DEBUG

__prompt_start() {
  : "${_LAST_SECONDS:=$SECONDS}"
}

PROMPT_COMMAND=__prompt_command

__prompt_command() {
  # $? needs to be first
  LAST_EXIT=$?
  LAST_DURATION=$((SECONDS - _LAST_SECONDS))
  unset _LAST_SECONDS
}

__git_project_ps1() {
  local git_toplevel
  git_toplevel=$(git rev-parse --show-toplevel 2>/dev/null)
  if [ -n "$git_toplevel" ] && [ "$git_toplevel" != "$PWD" ]; then
    basename "$git_toplevel:"
  fi
}

__k8s_ps1() {
  local context
  context=$(kubectl config current-context 2>/dev/null)
  if [ -n "$context" ]; then
    echo " k8s:$context"
  fi
}

# Start with an empty prompt
PS1=''

# Add info line
# Set color to blue
PS1="$PS1"'\[\033[01;34m\]'
PS1="$PS1"'['
PS1="$PS1"'\D{%H:%M:%S}/$LAST_EXIT/${LAST_DURATION}s'
PS1="$PS1"'$(__k8s_ps1)'
if type -t __git_ps1 >/dev/null; then
  # These settings can be slow for large repositories
  export GIT_PS1_SHOWDIRTYSTATE=true
  export GIT_PS1_SHOWUNTRACKEDFILES=true
  export GIT_PS1_STATESEPARATOR=
  export GIT_PS1_SHOWUPSTREAM=auto
  PS1="$PS1"'$(__git_ps1 " git:%s")'
fi
PS1="$PS1"' '
# Add hostname:directory to the prompt
# Only add hostname if remote
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  PS1="$PS1"'\h:'
fi
PS1="$PS1"'$(__git_project_ps1)\W'
PS1="$PS1"']'
# Reset color
PS1="$PS1"'\[\033[00m\]'
PS1="$PS1"'\n'

# Add $ to the end
PS1="$PS1"'\$ '
export PS1
